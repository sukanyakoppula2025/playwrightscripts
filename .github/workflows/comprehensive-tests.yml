name: Comprehensive Playwright Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      test-scenario:
        description: 'Specific test scenario to run'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - bedbath-login
        - bedbath-furniture
        - gmail-login
        - tripadvisor-search
        - html-reports
      browser:
        description: 'Browser to test with'
        required: false
        default: 'chromium'
        type: choice
        options:
        - chromium
        - firefox
        - webkit

jobs:
  test-bedbath-login:
    name: üõèÔ∏è Bed Bath & Beyond Login Tests
    runs-on: windows-latest
    if: github.event.inputs.test_scenario == 'all' || github.event.inputs.test_scenario == 'bedbath-login'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Build Bed Bath & Beyond Tests
      run: dotnet build BedBathBeyondTests.csproj --configuration Release
        
    - name: Install Playwright
      run: |
        dotnet tool install --global Microsoft.Playwright.CLI
        playwright install
        
    - name: Run Bed Bath & Beyond Login Tests
      run: |
        echo "Running Bed Bath & Beyond Login Tests..."
        dotnet run --project BedBathBeyondTests.csproj --configuration Release --no-build
      env:
        PLAYWRIGHT_HEADLESS: true
        PLAYWRIGHT_BROWSER: ${{ github.event.inputs.browser || 'chromium' }}
        
    - name: Upload Login Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bedbath-login-results
        path: |
          screenshots/
          videos/
          reports/
          
  test-bedbath-furniture:
    name: ü™ë Bed Bath & Beyond Furniture Navigation
    runs-on: windows-latest
    if: github.event.inputs.test_scenario == 'all' || github.event.inputs.test_scenario == 'bedbath-furniture'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Build Bed Bath & Beyond Tests
      run: dotnet build BedBathBeyondTests.csproj --configuration Release
        
    - name: Install Playwright
      run: |
        dotnet tool install --global Microsoft.Playwright.CLI
        playwright install
        
    - name: Run Furniture Navigation Tests
      run: |
        echo "Running Bed Bath & Beyond Furniture Navigation Tests..."
        dotnet run --project BedBathBeyondTests.csproj --configuration Release --no-build
      env:
        PLAYWRIGHT_HEADLESS: true
        PLAYWRIGHT_BROWSER: ${{ github.event.inputs.browser || 'chromium' }}
        
    - name: Upload Furniture Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bedbath-furniture-results
        path: |
          screenshots/
          videos/
          reports/
          
  test-gmail-login:
    name: üìß Gmail Login Tests
    runs-on: windows-latest
    if: github.event.inputs.test_scenario == 'all' || github.event.inputs.test_scenario == 'gmail-login'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Build Gmail Tests
      run: dotnet build GmailTests.csproj --configuration Release
        
    - name: Install Playwright
      run: |
        dotnet tool install --global Microsoft.Playwright.CLI
        playwright install
        
    - name: Run Gmail Login Tests
      run: |
        echo "Running Gmail Login Tests..."
        dotnet run --project GmailTests.csproj --configuration Release --no-build
      env:
        PLAYWRIGHT_HEADLESS: true
        PLAYWRIGHT_BROWSER: ${{ github.event.inputs.browser || 'chromium' }}
        
    - name: Upload Gmail Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: gmail-login-results
        path: |
          screenshots/
          videos/
          reports/
          
  test-tripadvisor-search:
    name: üõéÔ∏è TripAdvisor Poole Search Tests
    runs-on: windows-latest
    if: github.event.inputs.test_scenario == 'all' || github.event.inputs.test_scenario == 'tripadvisor-search'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Build Bed Bath & Beyond Tests (contains TripAdvisor tests)
      run: dotnet build BedBathBeyondTests.csproj --configuration Release
        
    - name: Install Playwright
      run: |
        dotnet tool install --global Microsoft.Playwright.CLI
        playwright install
        
    - name: Run TripAdvisor Search Tests
      run: |
        echo "Running TripAdvisor Poole Search Tests..."
        dotnet run --project BedBathBeyondTests.csproj --configuration Release --no-build
      env:
        PLAYWRIGHT_HEADLESS: true
        PLAYWRIGHT_BROWSER: ${{ github.event.inputs.browser || 'chromium' }}
        
    - name: Upload TripAdvisor Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: tripadvisor-search-results
        path: |
          screenshots/
          videos/
          reports/
          
  generate-html-reports:
    name: üìä HTML Report Generation
    runs-on: windows-latest
    if: github.event.inputs.test_scenario == 'all' || github.event.inputs.test_scenario == 'html-reports'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Build Bed Bath & Beyond Tests
      run: dotnet build BedBathBeyondTests.csproj --configuration Release
        
    - name: Install Playwright
      run: |
        dotnet tool install --global Microsoft.Playwright.CLI
        playwright install
        
    - name: Generate HTML Report Demo
      run: |
        echo "Generating HTML Report Demo..."
        dotnet run --project BedBathBeyondTests.csproj --configuration Release --no-build
      env:
        PLAYWRIGHT_HEADLESS: true
        PLAYWRIGHT_BROWSER: ${{ github.event.inputs.browser || 'chromium' }}
        
    - name: Upload Generated Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: html-reports-generated
        path: reports/
        
  summary-report:
    name: üìã Test Summary Report
    runs-on: ubuntu-latest
    needs: [test-bedbath-login, test-bedbath-furniture, test-gmail-login, test-tripadvisor-search, generate-html-reports]
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Generate comprehensive summary
      run: |
        echo "## üß™ Comprehensive Playwright Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üß™ Test Scenarios Executed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Check which test scenarios were run
        if [ -d "artifacts/bedbath-login-results" ]; then
          echo "‚úÖ **Bed Bath & Beyond Login Tests**: Completed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -d "artifacts/bedbath-furniture-results" ]; then
          echo "‚úÖ **Bed Bath & Beyond Furniture Navigation**: Completed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -d "artifacts/gmail-login-results" ]; then
          echo "‚úÖ **Gmail Login Tests**: Completed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -d "artifacts/tripadvisor-search-results" ]; then
          echo "‚úÖ **TripAdvisor Poole Search**: Completed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -d "artifacts/html-reports-generated" ]; then
          echo "‚úÖ **HTML Report Generation**: Completed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üìÅ Artifacts Available" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Test Results**: Screenshots, videos, and logs" >> $GITHUB_STEP_SUMMARY
        echo "- **HTML Reports**: Professional test execution reports" >> $GITHUB_STEP_SUMMARY
        echo "- **Configuration**: Environment-specific test settings" >> $GITHUB_STEP_SUMMARY
        
    - name: Comment PR with comprehensive results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          let comment = '## üß™ Comprehensive Playwright Test Results\n\n';
          
          comment += '### üß™ Test Scenarios Executed\n\n';
          
          const scenarios = [
            { name: 'Bed Bath & Beyond Login Tests', path: 'artifacts/bedbath-login-results' },
            { name: 'Bed Bath & Beyond Furniture Navigation', path: 'artifacts/bedbath-furniture-results' },
            { name: 'Gmail Login Tests', path: 'artifacts/gmail-login-results' },
            { name: 'TripAdvisor Poole Search', path: 'artifacts/tripadvisor-search-results' },
            { name: 'HTML Report Generation', path: 'artifacts/html-reports-generated' }
          ];
          
          scenarios.forEach(scenario => {
            if (fs.existsSync(scenario.path)) {
              comment += `‚úÖ **${scenario.name}**: Completed successfully\n`;
            } else {
              comment += `‚ùå **${scenario.name}**: Not executed or failed\n`;
            }
          });
          
          comment += '\n### üöÄ Key Features\n\n';
          comment += '- **üõèÔ∏è Bed Bath & Beyond**: Login automation, Furniture navigation\n';
          comment += '- **üìß Gmail**: Login automation with enhanced scenarios\n';
          comment += '- **üõéÔ∏è TripAdvisor**: Poole search automation\n';
          comment += '- **üìä HTML Reports**: Professional test result generation\n';
          comment += '- **‚öôÔ∏è Configuration**: Environment-specific test settings\n';
          comment += '- **üîÑ Cross-browser**: Support for Chrome, Firefox, Safari\n\n';
          
          comment += '### üìÅ Artifacts Available\n\n';
          comment += '- **Test Results**: Screenshots, videos, and execution logs\n';
          comment += '- **HTML Reports**: Professional test execution reports\n';
          comment += '- **Configuration**: Environment-specific test settings\n\n';
          comment += 'üîç **View Results**: Check the Actions tab for detailed logs and artifacts';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
